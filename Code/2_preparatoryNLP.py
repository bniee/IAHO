# -*- coding: utf-8 -*-
"""2_NLP_codeFinal_230809.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UOPVvDDGNVikT0qMcYER5dKM-2zZb1Z3

**1. Install konlpy and nltk for frequency anlaysis**
"""

# 데스크탑 konlpy 설치 후 코랩에 설치
## JAVA_HOME 환경변수 설정
!apt-get update

!apt-get install g++ openjdk-8-jdk python-dev python3-dev

!pip3 install JPype1-py3

!pip3 install konlpy

!JAVA_HOME="C:\Program Files\Java\jdk-20"

# konlpy 실행 이상 없는 지 확인 (error message 없이 실행되면 이상 없음)
from konlpy.tag import Okt
okt = Okt()

# 혹시 몰라 nltk 설치
pip install nltk

"""**2. Import a data**"""

# 구글드라이브에서 파일 불러오기 위한 환경 설정
from google.colab import drive
drive.mount('/content/gdrive')

import pandas as pd
df = pd.read_csv('/content/gdrive/MyDrive/Data/tm_all.csv')

df

"""**3. Extract nouns from text data**"""

# 텍스트데이터의 '사고경위' 열에 포함되는 레코드에 토큰화 함수를 적용하여 'tokenized' 열에 저장
## **df['열의이름'].values** 사용하여 데이터프레임의 '사고경위' 열을 리스트 형태로 생성
### konlpy 형태소 분석기 중 명사 추출을 위한 Okt 정의 후 이용
df['tkn_si'] = df['사고경위'].apply(okt.nouns)
df['tkn_cs'] = df['사고원인_소'].apply(okt.nouns)

# 명사 추출이 완료된 데이터셋 저장
df.to_csv('/content/gdrive/MyDrive/Data/tkn_test.csv',index=False,encoding='utf-8-sig')
df

"""**4. Frequency Analysis**"""

# **np.hstack()** 사용하여 특정 조건에 맞게 필터링된 데이터프레임 내 'tkn_si' 및 'tkn_cs' 열의 모든 리스트를 하나의 리스트로 생성
## 사고원인(대)에 따른 명사 집합 생성
import numpy as np

tkn_si_cb_1 = np.hstack(df[df['사고원인_대']=='작업자부주의']['tkn_si'].values)
tkn_si_cb_2 = np.hstack(df[df['사고원인_대']=='작업자의불안전한행동']['tkn_si'].values)
tkn_si_cb_3 = np.hstack(df[df['사고원인_대']=='작업자통제미흡']['tkn_si'].values)
tkn_si_cb_4 = np.hstack(df[df['사고원인_대']=='위험정보미제공']['tkn_si'].values)
tkn_si_cb_5 = np.hstack(df[df['사고원인_대']=='운전자자격관리미흡']['tkn_si'].values)

tkn_cs_cb_1 = np.hstack(df[df['사고원인_대']=='작업자부주의']['tkn_cs'].values)
tkn_cs_cb_2 = np.hstack(df[df['사고원인_대']=='작업자의불안전한행동']['tkn_cs'].values)
tkn_cs_cb_3 = np.hstack(df[df['사고원인_대']=='작업자통제미흡']['tkn_cs'].values)
tkn_cs_cb_4 = np.hstack(df[df['사고원인_대']=='위험정보미제공']['tkn_cs'].values)
tkn_cs_cb_5 = np.hstack(df[df['사고원인_대']=='운전자자격관리미흡']['tkn_cs'].values)

print('▶ 사고원인(대)에 따른 사고경위')
print(tkn_si_cb_1)
print(tkn_si_cb_2)
print(tkn_si_cb_3)
print(tkn_si_cb_4)
print(tkn_si_cb_5)

print('\n▶ 사고원인(대)에 따른 사고원인(소)')

print(tkn_cs_cb_1)
print(tkn_cs_cb_2)
print(tkn_cs_cb_3)
print(tkn_cs_cb_4)
print(tkn_cs_cb_5)

## 공종(중)에 따른 명사 집합 생성
tkn_si_ty_1 = np.hstack(df[df['공종_중']=='철근콘크리트공사']['tkn_si'].values)
tkn_si_ty_2 = np.hstack(df[df['공종_중']=='가설공사']['tkn_si'].values)
tkn_si_ty_3 = np.hstack(df[df['공종_중']=='해체및철거공사']['tkn_si'].values)
tkn_si_ty_4 = np.hstack(df[df['공종_중']=='기계설비공사']['tkn_si'].values)
tkn_si_ty_5 = np.hstack(df[df['공종_중']=='토공사']['tkn_si'].values)

tkn_cs_ty_1 = np.hstack(df[df['공종_중']=='철근콘크리트공사']['tkn_cs'].values)
tkn_cs_ty_2 = np.hstack(df[df['공종_중']=='가설공사']['tkn_cs'].values)
tkn_cs_ty_3 = np.hstack(df[df['공종_중']=='해체및철거공사']['tkn_cs'].values)
tkn_cs_ty_4 = np.hstack(df[df['공종_중']=='기계설비공사']['tkn_cs'].values)
tkn_cs_ty_5 = np.hstack(df[df['공종_중']=='토공사']['tkn_cs'].values)

print('▶ 공종(중)에 따른 사고경위')
print(tkn_si_ty_1)
print(tkn_si_ty_2)
print(tkn_si_ty_3)
print(tkn_si_ty_4)
print(tkn_si_ty_5)

print('\n▶ 공종(중)에 따른 사고원인(소)')

print(tkn_cs_ty_1)
print(tkn_cs_ty_2)
print(tkn_cs_ty_3)
print(tkn_cs_ty_4)
print(tkn_cs_ty_5)

## 인적사고에 따른 명사 집합 생성
tkn_si_ac_1 = np.hstack(df[df['인적사고']=='물체에 맞음']['tkn_si'].values)
tkn_si_ac_2 = np.hstack(df[df['인적사고']=='끼임']['tkn_si'].values)
tkn_si_ac_3 = np.hstack(df[df['인적사고']=='넘어짐(기타)']['tkn_si'].values)
tkn_si_ac_4 = np.hstack(df[df['인적사고']=='넘어짐(미끄러짐)']['tkn_si'].values)
tkn_si_ac_5 = np.hstack(df[df['인적사고']=='부딪힘']['tkn_si'].values)

tkn_cs_ac_1 = np.hstack(df[df['인적사고']=='물체에 맞음']['tkn_cs'].values)
tkn_cs_ac_2 = np.hstack(df[df['인적사고']=='끼임']['tkn_cs'].values)
tkn_cs_ac_3 = np.hstack(df[df['인적사고']=='넘어짐(기타)']['tkn_cs'].values)
tkn_cs_ac_4 = np.hstack(df[df['인적사고']=='넘어짐(미끄러짐)']['tkn_cs'].values)
tkn_cs_ac_5 = np.hstack(df[df['인적사고']=='부딪힘']['tkn_cs'].values)

print('▶ 인적사고에 따른 사고경위')
print(tkn_si_ac_1)
print(tkn_si_ac_2)
print(tkn_si_ac_3)
print(tkn_si_ac_4)
print(tkn_si_ac_5)

print('\n▶ 인적사고에 따른 사고원인(소)')

print(tkn_cs_ac_1)
print(tkn_cs_ac_2)
print(tkn_cs_ac_3)
print(tkn_cs_ac_4)
print(tkn_cs_ac_5)

## 사고객체(중)에 따른 명사 집합 생성
tkn_si_ob_1 = np.hstack(df[df['사고객체_중']=='자재']['tkn_si'].values)
tkn_si_ob_2 = np.hstack(df[df['사고객체_중']=='공구류']['tkn_si'].values)
tkn_si_ob_3 = np.hstack(df[df['사고객체_중']=='거푸집']['tkn_si'].values)
tkn_si_ob_4 = np.hstack(df[df['사고객체_중']=='비계']['tkn_si'].values)
tkn_si_ob_5 = np.hstack(df[df['사고객체_중']=='철근']['tkn_si'].values)

tkn_cs_ob_1 = np.hstack(df[df['사고객체_중']=='자재']['tkn_cs'].values)
tkn_cs_ob_2 = np.hstack(df[df['사고객체_중']=='공구류']['tkn_cs'].values)
tkn_cs_ob_3 = np.hstack(df[df['사고객체_중']=='거푸집']['tkn_cs'].values)
tkn_cs_ob_4 = np.hstack(df[df['사고객체_중']=='비계']['tkn_cs'].values)
tkn_cs_ob_5 = np.hstack(df[df['사고객체_중']=='철근']['tkn_cs'].values)

print('▶ 사고객체(중)에 따른 사고경위')
print(tkn_si_ob_1)
print(tkn_si_ob_2)
print(tkn_si_ob_3)
print(tkn_si_ob_4)
print(tkn_si_ob_5)

print('\n▶ 사고객체(중)에 따른 사고원인(소)')

print(tkn_cs_ob_1)
print(tkn_cs_ob_2)
print(tkn_cs_ob_3)
print(tkn_cs_ob_4)
print(tkn_cs_ob_5)

## 작업프로세스에 따른 명사 집합 생성
tkn_si_pr_1 = np.hstack(df[df['작업프로세스']=='설치작업']['tkn_si'].values)
tkn_si_pr_2 = np.hstack(df[df['작업프로세스']=='해체작업']['tkn_si'].values)
tkn_si_pr_3 = np.hstack(df[df['작업프로세스']=='이동']['tkn_si'].values)
tkn_si_pr_4 = np.hstack(df[df['작업프로세스']=='운반작업']['tkn_si'].values)
tkn_si_pr_5 = np.hstack(df[df['작업프로세스']=='정리작업']['tkn_si'].values)

tkn_cs_pr_1 = np.hstack(df[df['작업프로세스']=='설치작업']['tkn_cs'].values)
tkn_cs_pr_2 = np.hstack(df[df['작업프로세스']=='해체작업']['tkn_cs'].values)
tkn_cs_pr_3 = np.hstack(df[df['작업프로세스']=='이동']['tkn_cs'].values)
tkn_cs_pr_4 = np.hstack(df[df['작업프로세스']=='운반작업']['tkn_cs'].values)
tkn_cs_pr_5 = np.hstack(df[df['작업프로세스']=='정리작업']['tkn_cs'].values)

print('▶ 작업프로세스에 따른 사고경위')
print(tkn_si_pr_1)
print(tkn_si_pr_2)
print(tkn_si_pr_3)
print(tkn_si_pr_4)
print(tkn_si_pr_5)

print('\n▶ 작업프로세스에 따른 사고원인(소)')

print(tkn_cs_pr_1)
print(tkn_cs_pr_2)
print(tkn_cs_pr_3)
print(tkn_cs_pr_4)
print(tkn_cs_pr_5)

# 사고원인(대)에 따른 사고경위 및 사고원인 데이터프레임 CSV로 변환
df2 = pd.DataFrame(zip(tkn_si_cb_1, tkn_si_cb_2, tkn_si_cb_3, tkn_si_cb_4, tkn_si_cb_5,
                       tkn_cs_cb_1, tkn_cs_cb_2, tkn_cs_cb_3, tkn_cs_cb_4, tkn_cs_cb_5,))
df2.columns = ['사고경위_작업자부주의', '사고경위_작업자의불안전한행동', '사고경위_작업자통제미흡', '사고경위_위험정보미제공', '사고경위_운전자자격관리미흡',
               '사고원인_작업자부주의', '사고원인_작업자의불안전한행동', '사고원인_작업자통제미흡', '사고원인_위험정보미제공', '사고원인_운전자자격관리미흡']

df2.to_csv('/content/gdrive/MyDrive/Data/tkn_cb.csv',index=False,encoding='utf-8-sig')

df2

# 추출된 명사들의 등장 빈도 수집
from collections import Counter

tkn_si_cb_1_word_count = Counter(tkn_si_cb_1)
print(tkn_si_cb_1_word_count.most_common(1000))